plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.senla.worklog.reminder'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.apache.httpcomponents:httpclient'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('javadoc') {
	options.links("https://docs.oracle.com/en/java/javase/11/docs/api/")
	options.links("https://docs.spring.io/spring-framework/docs/current/javadoc-api/")
	options.linkSource true
	options.addStringOption('Xdoclint:none', '-quiet')
}

jacoco {
	toolVersion = '0.8.8'
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

task buildDockerImage(type: Exec) {
	workingDir "$projectDir"
	commandLine "docker", "build", ".",
			"-t", "letimof/${project.name}:${project.version}",
			"--build-arg", "PROJECT_NAME=${project.name}",
			"--build-arg", "PROJECT_VERSION=${project.version}"
}

task loginDocker(type: Exec) {
	commandLine "docker", "login", "-u", "$System.env.DOCKER_USERNAME", "-p", "$System.env.DOCKER_PASSWORD"
}

task pushDockerImage(type: Exec) {
	commandLine "docker", "push", "letimof/${project.name}:${project.version}"
}

pushDockerImage.dependsOn loginDocker
pushDockerImage.dependsOn buildDockerImage
